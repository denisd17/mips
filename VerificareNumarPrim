.data
	caz1: .asciiz "Numarul p introdus nu este numar prim!"
.text
main:
	li $v0, 5		#incarcam registrul v0 cu codul de apel sistem 5, pentru a citi numarul p
	syscall
	
	move $t0, $v0		#copiem valoarea numarului p din registrul v0 in registrul temporar t0
	
	blt $t0, 2, nonprim	#verificam ca numarul p sa fie cel putin egal cu doi, in caz contrar acesta nu este prim
	
	move $t1, $t0		#copiem valoarea numarului p din registrul t0 in registrul t1
	div $t1, $t1, 2		
	addi $t1, $t1, 1	#acum registrul t1 va stoca valoarea (p/2) + 1, vom cauta divizori in intervalul [2,p/2]
	li $t2, 2		#vom folosi registrul t2 pentru a stoca in acesta valorile potentialilor divizori ai lui p
	
loop:
	beq $t2, $t1, prim	#daca nu gasim divizorii in intervalul [2,p/2] inseamna ca numarul este prim
	
	rem $t3, $t0, $t2	#stocam in registrul t3 valoarea restului impartirii lui p la potentialul divizor 
	
	beq $t3, 0, nonprim	#in cazul in care restul impartirii este 0, deci p se imparte exact, am gasit un divizor deci p nu e prim
	
	addi $t2, $t2, 1	#in caz contrar, trecem la numarul urmator pentru care vom face verificarea
	
	j loop			#sare la inceputul lui loop:
	

nonprim:
	li $v0, 4		#incarcam registrul v0 cu codul de apel sistem 4, pentru a afisa un mesaj pe ecran
	la $a0, caz1		#incarcam registrul a0 cu adresa sirului de caractere ce urmeaza a fi afisat
	syscall
	
	li $v0, 10
	syscall
	
prim:
	li $v0, 1
	move $a0, $t0
	syscall
	
	li $v0, 10
	syscall
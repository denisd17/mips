.data
	v: .word 2, 4, 1, 3, 5
	n: .word 5
	sp: .asciiz " "
.text

main:
	lw $t3, n	#incarcam in t3 dim vectorului
bubble_sort:
	li $t0, 0	#conditie ptr bubble sort
	li $t1, 1	#contor
	li $t2, 0	#index
	
	lw $t4, v($t2)	#stocam in t4 primul el al vectorului
	addi $t2, $t2, 4
loop:	
	beq $t1, $t3, exit
	
	lw $t5, v($t2)	#stocam in t5 el vectorului
	
	bgt $t4, $t5, swap	#daca el anterior e mai mare decat el actual, le inversam
	
	j update
update:
	move $t4, $t5		#updatam valoarea lui t4, ce reprezinta el anterior el actual
	j continue

swap:
	sw $t4, v($t2)
	subi $t2, $t2, 4
	sw $t5, v($t2)
	addi $t2, $t2, 4
	li $t0, 1
	
	j continue

continue:
	addi $t1, $t1, 1
	addi $t2, $t2, 4
	
	j loop	
exit:
	beq $t0, 1, bubble_sort

afis:
	li $t1, 0
	li $t2, 0
	
loop2:
	beq $t1, $t3, iesire
	
	lw $a0, v($t2)
	li $v0, 1
	syscall
	
	la $a0, sp
	li $v0, 4
	syscall
	
	addi $t1, $t1, 1
	addi $t2, $t2, 4
	
	j loop2
	
iesire:
	
	li $v0, 10
	syscall
	
	
	
	
	
	
	
	